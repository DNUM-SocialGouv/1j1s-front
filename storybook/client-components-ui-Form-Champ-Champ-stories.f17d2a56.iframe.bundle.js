"use strict";(self.webpackChunk_1j1s_front=self.webpackChunk_1j1s_front||[]).push([[9105],{"./src/client/components/ui/Form/Champ/Champ.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ComposantInputAvecValidationCustom:()=>ComposantInputAvecValidationCustom,ComposantNonInput:()=>ComposantNonInput,Indication:()=>Indication,IndicationEtErreur:()=>IndicationEtErreur,Required:()=>Required,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__,exemple:()=>exemple});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),_client_components_ui_Form_Combobox__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/client/components/ui/Form/Combobox/index.tsx"),_Input__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/client/components/ui/Form/Input/index.tsx"),_Champ__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/client/components/ui/Form/Champ/Champ.tsx"),__jsx=react__WEBPACK_IMPORTED_MODULE_0__.createElement;const __WEBPACK_DEFAULT_EXPORT__={component:_Champ__WEBPACK_IMPORTED_MODULE_3__.Y,title:"Components/Form/Champ"};var exemple={args:{},render:function render(args){return __jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y,args,__jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y.Label,null,"Pays"),__jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y.Input,{render:_Input__WEBPACK_IMPORTED_MODULE_2__.p}))}},Required={args:{},render:function render(args){return __jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y,args,__jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y.Label,null,"Pays ",__jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y.Label.Complement,null,"(requis)")),__jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y.Input,{render:_Input__WEBPACK_IMPORTED_MODULE_2__.p,defaultValue:"France",required:!0}),__jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y.Error,null))}},Indication={args:{},render:function render(args){return __jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y,args,__jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y.Label,null,"Pays"),__jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y.Input,{render:_Input__WEBPACK_IMPORTED_MODULE_2__.p}),__jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y.Hint,null,"e.g. France"))}},IndicationEtErreur={args:{},render:function render(args){return __jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y,args,__jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y.Label,null,"Pays ",__jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y.Label.Complement,null,"(requis)")),__jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y.Input,{render:_Input__WEBPACK_IMPORTED_MODULE_2__.p,defaultValue:"France",required:!0,validation:function validation(){return"toot"}}),__jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y.Error,null),__jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y.Hint,null,"e.g. France"))}},ComposantNonInput={args:{},render:function render(args){return __jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y,args,__jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y.Label,null,"Pays ",__jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y.Label.Complement,null,"(requis)")),__jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y.Input,{render:_client_components_ui_Form_Combobox__WEBPACK_IMPORTED_MODULE_1__.G,"aria-label":"Pays",required:!0},__jsx(_client_components_ui_Form_Combobox__WEBPACK_IMPORTED_MODULE_1__.G.Option,null,"France"),__jsx(_client_components_ui_Form_Combobox__WEBPACK_IMPORTED_MODULE_1__.G.Option,null,"Allemagne"),__jsx(_client_components_ui_Form_Combobox__WEBPACK_IMPORTED_MODULE_1__.G.Option,null,"Suisse"),__jsx(_client_components_ui_Form_Combobox__WEBPACK_IMPORTED_MODULE_1__.G.Option,null,"Norvège"),__jsx(_client_components_ui_Form_Combobox__WEBPACK_IMPORTED_MODULE_1__.G.Option,null,"Espagne"),__jsx(_client_components_ui_Form_Combobox__WEBPACK_IMPORTED_MODULE_1__.G.Option,null,"Italie")),__jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y.Error,null))}},ComposantInputAvecValidationCustom={args:{},render:function render(args){return __jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y,args,__jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y.Label,null,"Pays ",__jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y.Label.Complement,null,"(entrer “France”)")),__jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y.Input,{render:_Input__WEBPACK_IMPORTED_MODULE_2__.p,required:!0,validation:function validation(value){return"France"===value?"":'Entrer "France"'}}),__jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y.Error,null),__jsx(_Champ__WEBPACK_IMPORTED_MODULE_3__.Y.Hint,null,"e.g. France"))}};exemple.parameters={...exemple.parameters,docs:{...exemple.parameters?.docs,source:{originalSource:"{\n  args: {},\n  render: args => <Champ {...args}>\n            <Champ.Label>Pays</Champ.Label>\n            <Champ.Input render={Input} />\n        </Champ>\n}",...exemple.parameters?.docs?.source}}},Required.parameters={...Required.parameters,docs:{...Required.parameters?.docs,source:{originalSource:'{\n  args: {},\n  render: args => {\n    return <Champ {...args}>\n                <Champ.Label>Pays <Champ.Label.Complement>(requis)</Champ.Label.Complement></Champ.Label>\n                <Champ.Input render={Input} defaultValue="France" required={true} />\n                <Champ.Error />\n            </Champ>;\n  }\n}',...Required.parameters?.docs?.source}}},Indication.parameters={...Indication.parameters,docs:{...Indication.parameters?.docs,source:{originalSource:"{\n  args: {},\n  render: args => <Champ {...args}>\n            <Champ.Label>Pays</Champ.Label>\n            <Champ.Input render={Input} />\n            <Champ.Hint>e.g. France</Champ.Hint>\n        </Champ>\n}",...Indication.parameters?.docs?.source}}},IndicationEtErreur.parameters={...IndicationEtErreur.parameters,docs:{...IndicationEtErreur.parameters?.docs,source:{originalSource:"{\n  args: {},\n  render: args => <Champ {...args}>\n            <Champ.Label>Pays <Champ.Label.Complement>(requis)</Champ.Label.Complement></Champ.Label>\n            <Champ.Input render={Input} defaultValue=\"France\" required validation={() => 'toot'} />\n            <Champ.Error />\n            <Champ.Hint>e.g. France</Champ.Hint>\n        </Champ>\n}",...IndicationEtErreur.parameters?.docs?.source}}},ComposantNonInput.parameters={...ComposantNonInput.parameters,docs:{...ComposantNonInput.parameters?.docs,source:{originalSource:'{\n  args: {},\n  render: args => {\n    return <Champ {...args}>\n                <Champ.Label>Pays <Champ.Label.Complement>(requis)</Champ.Label.Complement></Champ.Label>\n                <Champ.Input render={Combobox} aria-label="Pays" required={true}>\n                    <Combobox.Option>France</Combobox.Option>\n                    <Combobox.Option>Allemagne</Combobox.Option>\n                    <Combobox.Option>Suisse</Combobox.Option>\n                    <Combobox.Option>Norvège</Combobox.Option>\n                    <Combobox.Option>Espagne</Combobox.Option>\n                    <Combobox.Option>Italie</Combobox.Option>\n                </Champ.Input>\n                <Champ.Error />\n            </Champ>;\n  }\n}',...ComposantNonInput.parameters?.docs?.source}}},ComposantInputAvecValidationCustom.parameters={...ComposantInputAvecValidationCustom.parameters,docs:{...ComposantInputAvecValidationCustom.parameters?.docs,source:{originalSource:"{\n  args: {},\n  render: args => <Champ {...args}>\n            <Champ.Label>Pays <Champ.Label.Complement>(entrer &ldquo;France&rdquo;)</Champ.Label.Complement></Champ.Label>\n            <Champ.Input render={Input} required validation={value => value === 'France' ? '' : 'Entrer \"France\"'} />\n            <Champ.Error />\n            <Champ.Hint>e.g. France</Champ.Hint>\n        </Champ>\n}",...ComposantInputAvecValidationCustom.parameters?.docs?.source}}};const __namedExportsOrder=["exemple","Required","Indication","IndicationEtErreur","ComposantNonInput","ComposantInputAvecValidationCustom"]}}]);