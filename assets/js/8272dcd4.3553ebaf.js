"use strict";(self.webpackChunk_1_j_1_s_front_docs=self.webpackChunk_1_j_1_s_front_docs||[]).push([[57],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,k=p["".concat(s,".").concat(d)]||p[d]||c[d]||i;return n?a.createElement(k,l(l({ref:t},m),{},{components:n})):a.createElement(k,l({ref:t},m))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3017:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_label:"Git",sidebar_position:1},l="Standards d'\xe9quipe li\xe9s \xe0 Git",o={unversionedId:"convention/git",id:"convention/git",title:"Standards d'\xe9quipe li\xe9s \xe0 Git",description:"20 Avril 2023",source:"@site/docs/convention/git.md",sourceDirName:"convention",slug:"/convention/git",permalink:"/1j1s-front/docs/convention/git",draft:!1,editUrl:"https://github.com/DNUM-SocialGouv/1j1s-front/tree/main/docs/docs/docs/convention/git.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Git",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"\u2696\ufe0f Conventions",permalink:"/1j1s-front/docs/category/\ufe0f-conventions"},next:{title:"Langages",permalink:"/1j1s-front/docs/convention/langages"}},s={},u=[{value:"Commits",id:"commits",level:2},{value:"Convention",id:"convention",level:3},{value:"Langue",id:"langue",level:3},{value:"Contextes d&#39;un commit",id:"contextes-dun-commit",level:3},{value:"Contenu du message",id:"contenu-du-message",level:3},{value:"Exemples de nommage",id:"exemples-de-nommage",level:3},{value:"Strat\xe9gie pour les branches",id:"strat\xe9gie-pour-les-branches",level:2},{value:"Strat\xe9gie de Versioning",id:"strat\xe9gie-de-versioning",level:2}],m={toc:u},p="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"standards-d\xe9quipe-li\xe9s-\xe0-git"},"Standards d'\xe9quipe li\xe9s \xe0 Git"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"20 Avril 2023")),(0,r.kt)("p",null,"Ahoy \ud83d\udc4b\nAfin de garder une base de code homog\xe8ne, merci de respecter ces quelques standards."),(0,r.kt)("h2",{id:"commits"},"Commits"),(0,r.kt)("h3",{id:"convention"},"Convention"),(0,r.kt)("p",null,'Nous allons nous baser sur la convention "',(0,r.kt)("a",{parentName:"p",href:"https://www.conventionalcommits.org/en/v1.0.0/"},"Conventional Commits"),'".'),(0,r.kt)("h3",{id:"langue"},"Langue"),(0,r.kt)("p",null,"Il a \xe9t\xe9 convenu de r\xe9diger les commits en fran\xe7ais car le projet n'est pas \xe0 destination internationale.\nCelui-ci est destin\xe9 en premier lieu au gouvernement fran\xe7ais. Les messages de chaque commit doivent \xeatre autoportants."),(0,r.kt)("h3",{id:"contextes-dun-commit"},"Contextes d'un commit"),(0,r.kt)("p",null,"Les types de commit sont donc\xa0:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"feat"),"\xa0: nouvelle fonctionnalit\xe9"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"fix"),"\xa0: correction d'un bug"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"build"),"\xa0: changements du syst\xe8me de build ou de d\xe9pendances"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"chore"),"\xa0: autre changement qui ne modifie ni fichier src, ni fichier test"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"ci"),"\xa0: changement \xe0 la configuration de la CI"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"docs"),"\xa0: changement sur la documentation"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"style"),"\xa0: changement n'affectant pas le sens du code (espace, point-virgule, format, etc.)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"refactor"),"\xa0: changement qui ne corrige pas de bug ou n'ajoute pas une nouvelle fonctionnalit\xe9"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"perf"),"\xa0: changement qui am\xe9liore les performances"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"test"),"\xa0: ajoute ou corrige un test"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"revert"),"\xa0: annule un pr\xe9c\xe9dent changement")),(0,r.kt)("p",null,"Chaque commit doit assurer que\xa0:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"l'application fonctionne"),(0,r.kt)("li",{parentName:"ul"},"le linter passe"),(0,r.kt)("li",{parentName:"ul"},"les tests passent")),(0,r.kt)("p",null,"D\xe8s que cela est possible, pr\xe9ciser le contexte pour chaque commit, en lettres minuscules. Cela peut \xeatre une fonctionnalit\xe9, un composant transverse, de l'interface ou une exigence non fonctionnelle. "),(0,r.kt)("p",null,"Liste des contextes de ",(0,r.kt)("strong",{parentName:"p"},"fonctionnalit\xe9s")," autoris\xe9es (non exhaustive)\xa0:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"emplois"),(0,r.kt)("li",{parentName:"ul"},"stages"),(0,r.kt)("li",{parentName:"ul"},"alternance"),(0,r.kt)("li",{parentName:"ul"},"jobs \xe9tudiants"),(0,r.kt)("li",{parentName:"ul"},"jobs d'\xe9t\xe9"),(0,r.kt)("li",{parentName:"ul"},"emplois europe"),(0,r.kt)("li",{parentName:"ul"},"formations"),(0,r.kt)("li",{parentName:"ul"},"metiers (pour d\xe9couvrir les m\xe9tiers)"),(0,r.kt)("li",{parentName:"ul"},"\xe9v\xe8nement"),(0,r.kt)("li",{parentName:"ul"},"cej (pour contrat engagement jeune)"),(0,r.kt)("li",{parentName:"ul"},"aides"),(0,r.kt)("li",{parentName:"ul"},"logement"),(0,r.kt)("li",{parentName:"ul"},"mentorat"),(0,r.kt)("li",{parentName:"ul"},"entreprendre"),(0,r.kt)("li",{parentName:"ul"},"accompagnement"),(0,r.kt)("li",{parentName:"ul"},"services jeunes"),(0,r.kt)("li",{parentName:"ul"},"b\xe9n\xe9volat"),(0,r.kt)("li",{parentName:"ul"},"actualit\xe9s"),(0,r.kt)("li",{parentName:"ul"},"employeur"),(0,r.kt)("li",{parentName:"ul"},"sitemap"),(0,r.kt)("li",{parentName:"ul"},"robots")),(0,r.kt)("h3",{id:"contenu-du-message"},"Contenu du message"),(0,r.kt)("p",null,"Un message de commit doit contenir a minima un titre court format\xe9 contenant un pr\xe9fixe cit\xe9 dans la convention ci-dessus. Si une description suppl\xe9mentaire est n\xe9cessaire, celle-ci sera ajout\xe9e dans un sous-message de commit."),(0,r.kt)("h3",{id:"exemples-de-nommage"},"Exemples de nommage"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"exemple\xa0: ",(0,r.kt)("inlineCode",{parentName:"em"},"feat(sitemap): ajout des offres de stages au sitemap"))),(0,r.kt)("p",null,"Exemple de composants transverses (non exhaustive)\xa0:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"header"),(0,r.kt)("li",{parentName:"ul"},"footer"),(0,r.kt)("li",{parentName:"ul"},"nav")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"exemple\xa0: ",(0,r.kt)("inlineCode",{parentName:"em"},"refactor(nav): g\xe9n\xe9ration du menu \xe0 partir d'un fichier de configuration"))),(0,r.kt)("p",null,"Dans le cas de changement de style, pr\xe9f\xe9rer\xa0:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"ui")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"exemple\xa0: ",(0,r.kt)("inlineCode",{parentName:"em"},"feat(ui): mise \xe0 jour du style des champs texte"))),(0,r.kt)("p",null,"Exigences non fonctionnelles (non exhaustive)\xa0:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"meilisearch"),(0,r.kt)("li",{parentName:"ul"},"deps")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"exemple\xa0: ",(0,r.kt)("inlineCode",{parentName:"em"},"chore(deps): mise \xe0 jour des d\xe9pendances"))),(0,r.kt)("h2",{id:"strat\xe9gie-pour-les-branches"},"Strat\xe9gie pour les branches"),(0,r.kt)("p",null,"Pour une parfaite int\xe9gration avec Jira, une branche li\xe9e \xe0 une user story doit comporter le num\xe9ro du ticket. Ex\xa0:\n",(0,r.kt)("em",{parentName:"p"},"exemple\xa0:",(0,r.kt)("inlineCode",{parentName:"em"},"feat/UNJ1S-1307-Afficher-les-statistiques-d-une-formation-avec-InserJeunes"))),(0,r.kt)("p",null,"Les branches peuvent \xeatre merg\xe9es selon 2 m\xe9thodes\xa0:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"squash"),(0,r.kt)("li",{parentName:"ul"},"rebase and merge\nDans les 2 cas, les titres et descriptions des commit finaux doivent respecter nos ",(0,r.kt)("a",{parentName:"li",href:"#commits"},"standards"),". A chaque commit, l'application doit donc fonctionner, les tests et le linter passer.")),(0,r.kt)("h2",{id:"strat\xe9gie-de-versioning"},"Strat\xe9gie de Versioning"),(0,r.kt)("p",null,"Nous respectons le ",(0,r.kt)("a",{parentName:"p",href:"https://semver.org"},"Semantic Versioning"),"\nUne fois une branche merg\xe9e dans main, une Pull Request de release est automatiquement ouverte avec un commit de release pour\xa0:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"monter la version dans les ",(0,r.kt)("inlineCode",{parentName:"li"},"package.json")," et ",(0,r.kt)("inlineCode",{parentName:"li"},"package-lock.json")," selon les changements apport\xe9s par les pr\xe9c\xe9dents commits,"),(0,r.kt)("li",{parentName:"ul"},"ajouter un tag de version de la forme ",(0,r.kt)("inlineCode",{parentName:"li"},"vX.Y.Z")),(0,r.kt)("li",{parentName:"ul"},"mettre \xe0 jour le changelog en reprenant les messages de commits pr\xe9c\xe9dents")))}c.isMDXComponent=!0}}]);